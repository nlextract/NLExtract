# Stetl-Process-chains for enriching BAG VERSION 2 table data for addresses.
# A Chain is a series of Components: one Input, zero or more Filters and one Output.
# The output of a Component is connected to the input of the next Component (except for
# the final Output Component, which writes to the final destination, e.g. PostGIS or GeoPackage..
# Stetl is the ETL tool used. No custom Python code is needed!
#
# Currently the following chains are executed in the following order:
# - SQL adresses:  create adresses tables
#
# Just van den Broecke - 2021

[etl]
chains = input_sql_address_tables|output_postgres_sql


#
# INPUTS
#

# Pre SQL file inputs to be executed
[input_sql_address_tables]
class = stetl.inputs.fileinput.StringFileInput
file_path = sql/fill-reltables.sql,
            sql/adres/adres-tabel-plus-1.sql,
            sql/adres/adres-tabel-plus-2.sql,
            sql/adres/adres-tabel-plus-3.sql,
            sql/adres/adres-tabel-plus-4.sql,
            sql/adres/adres-tabel-plus-5.sql,
            sql/adres/adres-tabel-totaal.sql,
            sql/adres/adres-plus2adres-full-tabel.sql
format_args = schema:{schema}

#
# OUTPUTS
#

# Algemene Postgres SQL Executor
[output_postgres_sql]
class = stetl.outputs.dboutput.PostgresDbOutput
database = {pg_db}
host = {pg_host}
port = {pg_port}
user = {pg_user}
password = {password}
schema = {schema}

# Alternative outputs for testing

# Send to stdout
[output_std]
class = stetl.outputs.standardoutput.StandardOutput
